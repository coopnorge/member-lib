---
name: "Golang CI"
on:
  push: { }

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      is_repository_changed: ${{ steps.changes.outputs.changes }}
    steps:
      - name: "Checkout..."
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            changes:
              - '**'
      - name: "Print changes..."
        run: |
          echo "::${{ steps.changes.outputs }}"

  golang-ci:
    name: Go Lang CI
    runs-on: ubuntu-latest
    needs:
      - setup
    if: ${{ needs.setup.outputs.is_repository_changed == 'true' }}
    concurrency:
      group: ${{ github.repository }}-${{ github.workflow }}-golang-ci-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      id-token: write
      packages: read
    env:
      docker-compose-service: golang-devtools
    steps:
      - name: Configure access to internal and private GitHub repos
        run: git config --global url."https://${{ secrets.REVIEWBOT_GITHUB_TOKEN }}:x-oauth-basic@github.com/coopnorge".insteadOf "https://github.com/coopnorge"
      - name: Build devtools
        run: docker compose build
      - name: Validate
        run: docker compose run --rm ${{ env.docker-compose-service }} validate VERBOSE=all
      - name: Test
        run: docker compose run --rm ${{ env.docker-compose-service }} test VERBOSE=all

  build:
    needs:
      - "setup"
      - "golang-ci"
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        name: "Catch errors"
        if: |
          needs.golang-ci.result == 'failure'
