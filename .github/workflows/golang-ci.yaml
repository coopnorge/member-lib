name: "Golang CI"
on:
  push: {}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  matrix-prep:
    runs-on: ubuntu-24.04
    outputs:
      paths: '["configloader","pkg", "telemetry"]'
    steps:
      - run: echo "Preparing matrix"

  golang-ci:
    needs: matrix-prep
    name: "Lint Modules"
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        path: ${{ fromJson(needs.matrix-prep.outputs.paths) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@818ec4d51a1feacefc42ff1b3ec25d4962690f39 # pin@v6
        with:
          version: v1.60.3
          working-directory: ${{ matrix.path }}
          args: --out-format line-number --color never -v ./...

  gotest:
    needs: matrix-prep
    name: "Test Modules"
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        path: ${{ fromJson(needs.matrix-prep.outputs.paths) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Run tests with coverage
        run: |
          cd ${{ matrix.path }}
          go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

  build:
    needs:
      - "golang-ci"
      - "gotest"
    if: always()
    runs-on: ubuntu-24.04
    steps:
      - run: exit 1
        name: "Catch errors"
        if: |
          needs.golang-ci.result == 'failure' || contains(needs.*.result, 'failure')
    permissions: {}
